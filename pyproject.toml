[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "financeiro-backend"
version = "0.1.0"
description = "Sistema de Controle Financeiro Pessoal - Backend API"
authors = [
    {name = "Angelo", email = "dev@financeiro.com"},
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "fastapi>=0.111.0,<0.112.0",
    "uvicorn[standard]>=0.29.0,<0.30.0",
    "motor>=3.4.0,<3.5.0",
    "pydantic>=2.7.0,<2.8.0",
    "pydantic-settings>=2.2.0,<2.3.0",
    "python-jose[cryptography]>=3.3.0,<3.4.0",
    "bcrypt>=4.1.0,<4.2.0",
    "python-multipart>=0.0.9,<0.1.0",
    "redis>=5.0.0,<5.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2.0,<8.3.0",
    "pytest-asyncio>=0.23.0,<0.24.0",
    "pytest-cov>=5.0.0,<5.1.0",
    "httpx>=0.27.0,<0.28.0",
    "black>=24.4.0,<24.5.0",
    "isort>=5.13.0,<5.14.0",
    "flake8>=7.0.0,<7.1.0",
    "mypy>=1.10.0,<1.11.0",
    "pre-commit>=3.7.0,<3.8.0",
    "autoflake>=2.3.1,<2.4.0",
    "autopep8>=2.0.4,<2.1.0",
]

test = [
    "pytest>=8.2.0,<8.3.0",
    "pytest-asyncio>=0.23.0,<0.24.0",
    "pytest-cov>=5.0.0,<5.1.0",
    "httpx>=0.27.0,<0.28.0",
]

[project.urls]
Homepage = "https://github.com/angelo/financeiro-backend"
Documentation = "https://github.com/angelo/financeiro-backend/blob/main/README.md"
Repository = "https://github.com/angelo/financeiro-backend.git"
Issues = "https://github.com/angelo/financeiro-backend/issues"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["app"]
branch = true
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 79
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 79
known_first_party = ["app"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
